<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PollHub - Create and Vote on Polls</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .nav-tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .nav-tab {
            flex: 1;
            padding: 20px;
            text-align: center;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.1rem;
            font-weight: 600;
            color: #6c757d;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-tab.active {
            color: #4facfe;
            background: white;
        }

        .nav-tab.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .tab-content {
            display: none;
            padding: 30px;
        }

        .tab-content.active {
            display: block;
        }

        .form-group {
            margin-bottom: 25px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #495057;
        }

        input[type="text"], textarea {
            width: 100%;
            padding: 15px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        input[type="text"]:focus, textarea:focus {
            outline: none;
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
        }

        .option-input {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }

        .option-input input {
            flex: 1;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(79, 172, 254, 0.4);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .btn-add {
            background: #28a745;
            color: white;
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .poll-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            border: 1px solid #e9ecef;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }

        .poll-card:hover {
            transform: translateY(-2px);
        }

        .poll-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .poll-description {
            color: #6c757d;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .voting-option {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
            margin-bottom: 10px;
            border: 2px solid transparent;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .voting-option:hover {
            border-color: #4facfe;
            background: rgba(79, 172, 254, 0.05);
        }

        .voting-option.selected {
            border-color: #28a745;
            background: rgba(40, 167, 69, 0.1);
        }

        .vote-count {
            background: #4facfe;
            color: white;
            padding: 5px 12px;
            border-radius: 20px;
            font-weight: 600;
            min-width: 40px;
            text-align: center;
        }

        .voter-name-input {
            margin: 20px 0;
        }

        .admin-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
        }

        .stat-label {
            margin-top: 5px;
            opacity: 0.9;
        }

        .poll-results {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #e9ecef;
        }

        .result-bar {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .result-label {
            min-width: 200px;
            font-weight: 600;
        }

        .result-progress {
            flex: 1;
            height: 30px;
            background: #e9ecef;
            border-radius: 15px;
            margin: 0 15px;
            overflow: hidden;
        }

        .result-fill {
            height: 100%;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border-radius: 15px;
            transition: width 0.5s ease;
        }

        .result-count {
            font-weight: 600;
            color: #495057;
        }

        .admin-password {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .nav-tabs {
                flex-direction: column;
            }
            .option-input {
                flex-direction: column;
                align-items: stretch;
            }
            .result-bar {
                flex-direction: column;
                align-items: stretch;
                text-align: center;
            }
            .result-label {
                min-width: auto;
                margin-bottom: 5px;
            }
            .result-progress {
                margin: 5px 0;
            }
        }
    </style>
</head>
<body>
    <div class="admin-password" id="adminPassword" style="display: none;">
        Admin Password: <strong>admin123</strong>
    </div>

    <div class="container">
        <div class="header">
            <h1>üó≥Ô∏è PollHub</h1>
            <p>Create polls, collect votes, and analyze results</p>
        </div>

        <div class="nav-tabs">
            <button class="nav-tab active" onclick="switchTab('vote')">Vote on Polls</button>
            <button class="nav-tab" id="create-tab-button" style="display: none;" onclick="switchTab('create')">Create Poll</button>
            <button class="nav-tab" onclick="switchTab('admin')">Admin Panel</button>
        </div>

        <!-- Vote Tab -->
        <div class="tab-content active" id="vote-tab">
            <div id="polls-container"></div>
        </div>

        <!-- Create Poll Tab (hidden until admin login) -->
        <div class="tab-content" id="create-tab" style="display: none;">
            <h2 style="margin-bottom: 25px; color: #2c3e50;">Create New Poll</h2>
            <form id="poll-form" onsubmit="return false;">
                <div class="form-group">
                    <label for="poll-title">Poll Title *</label>
                    <input type="text" id="poll-title" required placeholder="Enter your poll question">
                </div>
                <div class="form-group">
                    <label for="poll-description">Description (optional)</label>
                    <textarea id="poll-description" rows="3" placeholder="Add additional context or details"></textarea>
                </div>
                <div class="form-group">
                    <label>Poll Options *</label>
                    <div id="options-container">
                        <div class="option-input">
                            <input type="text" placeholder="Option 1" required>
                            <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                        </div>
                        <div class="option-input">
                            <input type="text" placeholder="Option 2" required>
                            <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                        </div>
                    </div>
                    <button type="button" class="btn btn-add" onclick="addOption()">Add Option</button>
                </div>
                <button type="button" class="btn btn-primary" onclick="createPoll(event)">Create Poll</button>
            </form>
        </div>

        <!-- Admin Tab -->
        <div class="tab-content" id="admin-tab">
            <div id="admin-login">
                <h2 style="margin-bottom: 25px; color: #2c3e50;">Admin Access</h2>
                <div class="form-group">
                    <label for="admin-password-input">Password</label>
                    <input type="password" id="admin-password-input" placeholder="Enter admin password">
                </div>
                <button onclick="adminLogin()" class="btn btn-primary">Login</button>
            </div>

            <div id="admin-panel" style="display: none;">
                <h2 style="margin-bottom: 25px; color: #2c3e50;">Admin Dashboard</h2>
                <div class="admin-stats" id="admin-stats"></div>
                <div id="admin-polls"></div>
                <div style="margin-top: 30px;">
                    <button onclick="exportData()" class="btn btn-primary">Export All Data (JSON)</button>
                    <button onclick="clearAllData()" class="btn btn-danger" style="margin-left: 10px;">Clear All Data</button>
                    <button onclick="adminLogout()" class="btn btn-secondary" style="margin-left: 10px;">Logout</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let polls = JSON.parse(localStorage.getItem('pollhub_polls') || '[]');
        let votes = JSON.parse(localStorage.getItem('pollhub_votes') || '[]');
        let selectedOptions = {};

        function init() {
            displayPolls();
            updateAdminStats();
        }

        function switchTab(tab) {
            switchToTab(tab);
        }

        function switchToTab(tabName) {
            document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(t => t.classList.remove('active'));

            const tabs = document.querySelectorAll('.nav-tab');
            tabs.forEach(tab => {
                const tabText = tab.textContent.toLowerCase();
                if ((tabName === 'vote' && tabText.includes('vote')) ||
                    (tabName === 'create' && tabText.includes('create')) ||
                    (tabName === 'admin' && tabText.includes('admin'))) {
                    tab.classList.add('active');
                }
            });

            const target = document.getElementById(tabName + '-tab');
            if (target) target.classList.add('active');

            if (tabName === 'admin') {
                document.getElementById('adminPassword').style.display = 'block';
            } else {
                document.getElementById('adminPassword').style.display = 'none';
            }
        }

        function addOption() {
            const container = document.getElementById('options-container');
            const optionCount = container.children.length + 1;
            const optionDiv = document.createElement('div');
            optionDiv.className = 'option-input';
            optionDiv.innerHTML = `
                <input type="text" placeholder="Option ${optionCount}" required>
                <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
            `;
            container.appendChild(optionDiv);
        }

        function removeOption(button) {
            const container = document.getElementById('options-container');
            if (container.children.length > 2) {
                button.parentElement.remove();
            } else {
                alert('A poll must have at least 2 options.');
            }
        }

        function createPoll(e) {
            if (e) e.preventDefault();

            const title = document.getElementById('poll-title').value.trim();
            const description = document.getElementById('poll-description').value.trim();
            const optionInputs = document.querySelectorAll('#options-container input');
            const options = Array.from(optionInputs).map(input => input.value.trim()).filter(value => value);

            if (!title) {
                alert('Please enter a poll title.');
                return false;
            }

            if (options.length < 2) {
                alert('Please provide at least 2 options.');
                return false;
            }

            const poll = {
                id: Date.now().toString(),
                title,
                description,
                options: options.map((option, index) => ({ id: index, text: option })),
                createdAt: new Date().toISOString()
            };

            polls.push(poll);
            savePollsToStorage();

            document.getElementById('poll-title').value = '';
            document.getElementById('poll-description').value = '';
            resetOptionsContainer();

            displayPolls();
            updateAdminStats();
            alert('Poll created successfully!');
            switchToTab('vote');

            return false;
        }

        function resetOptionsContainer() {
            document.getElementById('options-container').innerHTML = `
                <div class="option-input">
                    <input type="text" placeholder="Option 1" required>
                    <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                </div>
                <div class="option-input">
                    <input type="text" placeholder="Option 2" required>
                    <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                </div>
            `;
        }

        function displayPolls() {
            const container = document.getElementById('polls-container');
            if (polls.length === 0) {
                container.innerHTML = `
                    <div class="poll-card">
                        <h3>No polls available</h3>
                        <p>Create your first poll using the "Create Poll" tab!</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = polls.map(poll => {
                const pollVotes = votes.filter(vote => vote.pollId === poll.id);
                const voteCounts = poll.options.map(option => ({
                    ...option,
                    count: pollVotes.filter(vote => vote.optionId === option.id).length
                }));

                return `
                    <div class="poll-card">
                        <h3 class="poll-title">${poll.title}</h3>
                        ${poll.description ? `<p class="poll-description">${poll.description}</p>` : ''}
                        <div class="voter-name-input">
                            <label>Your name (optional)</label>
                            <input type="text" id="voter-name-${poll.id}" placeholder="Enter your name">
                        </div>
                        <div id="options-${poll.id}">
                            ${voteCounts.map(option => `
                                <div class="voting-option" onclick="selectOption('${poll.id}', ${option.id})">
                                    <span>${option.text}</span>
                                    <span class="vote-count">${option.count}</span>
                                </div>
                            `).join('')}
                        </div>
                        <button
